/**
 * 
 */
package com.pon.pvt.master.repo;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.pon.pvt.master.entity.SensetivePagelinkMaster;


/**
 * @author Sanjeev
 *
 */
@Repository
public interface SensetivePagelinkRepository extends JpaRepository<SensetivePagelinkMaster, Integer>{
	
	@Query(value = "SELECT * FROM SensetivePagelinkMaster", nativeQuery = true)
	List<SensetivePagelinkMaster> findAllByName(List<String> listOfSensitiveNames);
	
	@Query("SELECT CASE WHEN COUNT(name) > 0 THEN 'true' ELSE 'false' END FROM SensetivePagelinkMaster sl where sl.name in ?1")
    public Boolean existsBySensitiveLinkName(String linkName);
	

	@Modifying
	@Transactional
	@Query("delete from SensetivePagelinkMaster cm where cm.id in ?1")
	void deleteSensitiveLinkWithIds(Integer[] recordIdArray);

	@Query("SELECT CASE WHEN COUNT(name) > 0 THEN 'true' ELSE 'false' END FROM SensetivePagelinkMaster cm where cm.name in ?1 and cm.id <> ?2")
	boolean existsBySensitiveLinkNameExceptThisId(String link, int id);

	@Query(value = "SELECT sl FROM SensetivePagelinkMaster sl where sl.channelState=true")
	List<SensetivePagelinkMaster> getActiveMarqueList();
	
	

	List<SensetivePagelinkMaster> findByChannelState(boolean channelState);

	@Query(value = "SELECT sl FROM SensetivePagelinkMaster sl where sl.pageUrl=?1")
	SensetivePagelinkMaster getSensetivePagelinkDetails(String pageUrl);
	
}
