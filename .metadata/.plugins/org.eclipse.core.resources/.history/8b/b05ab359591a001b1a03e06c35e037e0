/**
 * 
 */
package com.pon.pvt.master.repo;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.pon.pvt.master.entity.PollingBoothMaster;
import com.pon.pvt.master.entity.VotersEnrolled;


/**
 * @author Sanjeev
 *
 */
@Repository
public interface VotersEnrolledRepository extends JpaRepository<VotersEnrolled, Integer> {

	@Query(value = "SELECT * FROM VotersEnrolled", nativeQuery = true)
	List<VotersEnrolled> findAllByName(List<String> listOfVotersEnrolledNames);
	
	@Query("SELECT CASE WHEN COUNT(ve.name) > 0 THEN 'true' ELSE 'false' END FROM VotersEnrolled ve "
			+ " where ve.boothId.id in ?1 and ve.name in ?2")
    public Boolean existsByPollingBoothIdAndVoterEnrolledName(Integer parentId,String voterEnrolledName);

	@Modifying
	@Transactional
	@Query("delete from VotersEnrolled ve where ve.id in ?1")
	void deletePollingBoothWithIds(Integer[] recordIdArray);
	
	@Query("SELECT CASE WHEN COUNT(ve.name) > 0 THEN 'true' ELSE 'false' END FROM VotersEnrolled ve where ve.boothId.id in ?1 and ve.name in ?2 and ve.id <> ?3")	
	boolean existsByPollingBoothIdAndVoterEnrolledNameExceptThisId(int parentId, String votersEnrolledName, int id);
	
	
	@Query("select max(ve.voterNo) FROM VotersEnrolled ve  where ve.boothId.id=?1")
	public Integer findLargetVoterNo(Integer boothId);

	@Query("SELECT CASE WHEN COUNT(ve.name) > 0 THEN 'true' ELSE 'false' END FROM VotersEnrolled ve "+ " where ve.voterId in ?1")
	boolean searchByVoterId(String voterId);
	
	@Query("SELECT ve FROM VotersEnrolled ve "+ " where ve.voterId in ?1")
	VotersEnrolled findAVoterByVoterId(String voterId);
	
	VotersEnrolled findByVoterId(String voterId);
	
	VotersEnrolled findByName(String voterName);
	
}
