/**
 * 
 */
package com.pon.pub.hm.ctrl;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.pon.pub.ec.ctrl.ElectionResultController;
import com.pon.pvt.voting.dto.ElectionDetailDTO;
import com.pon.pvt.voting.dto.LoksabhaBalletForEnrolledVotersDTO;
import com.pon.pvt.voting.dto.VoterDetailsDTO;
import com.support.custom.exception.CustomRuntimeException;
import com.support.custom.exception.ExceptionApplicationUtility;
import com.support.grid_pagination.DataTableResults;

/**
 * @author Sanjeev
 *
 */
@Controller
@RequestMapping("/pub/eresult/")
public class ElectionResultController {
	static final Logger log = LoggerFactory.getLogger(ElectionResultController.class);
	
	
	@Autowired
	ElectionResultService electionResultService;
	
	
	@GetMapping("offline")	
	public String listCandidateInBalletPaper(@RequestParam(required = false) String yearId,
			                                 @RequestParam(required = false) String electionType,
			                                 @RequestParam(required = false) String stateId,
			                                 @RequestParam(required = false) String loksabhaId,
			                                 @RequestParam(required = false) String assemblyId,			                                 
			                                 Model model,HttpServletRequest request, HttpServletResponse response) {
		
		log.info("ElectionResultController :==> listCandidateInBalletPaper :==> Started");
		String target="";
			
		try {
		ElectionDetailDTO electionDetailDTO=new ElectionDetailDTO();		
		model.addAttribute(electionDetailDTO);
		
		}catch (CustomRuntimeException ex) {
			// Handle this exception
			String exceptionCause= ex.getExceptionInfo().exceptionCause;
		} catch (Exception ex) {
			CustomRuntimeException exLocal=ExceptionApplicationUtility.wrapRunTimeException(ex);
			//Handle this exception
			String exceptionCause= exLocal.getExceptionInfo().exceptionCause;
		}
		log.info("ElectionResultController :==> listCandidateInBalletPaper :==> End");
		return target;		
		
	}
	
	
	@RequestMapping(value = "resultPaginated", method = RequestMethod.POST)
	@ResponseBody
	public String resultPaginated( @RequestParam String voterId, HttpServletRequest request, HttpServletResponse response){
		
		log.info("ElectionResultController :==> resultPaginated :==> Started");
		
		DataTableResults<LoksabhaBalletForEnrolledVotersDTO> dataTableResults=null;
		voterId= "10-07-45-021-0001";
		String electionType="A";
		try {		
			if(electionType.equals("A"))
			   dataTableResults = loksabhaBalletService.loadElectionBalletPaperGrid(voterId, request);
			
			if(electionType.equals("P"))
				   dataTableResults = loksabhaBalletService.loadElectionBalletPaperGrid(voterId, request);
			
		}
		catch (CustomRuntimeException ex) {
			// Handle this exception
			String exceptionCause= ex.getExceptionInfo().exceptionCause;
		} catch (Exception ex) {
			CustomRuntimeException exLocal=ExceptionApplicationUtility.wrapRunTimeException(ex);
			//Handle this exception
			String exceptionCause= exLocal.getExceptionInfo().exceptionCause;
		}
		log.info("ElectionResultController :==> resultPaginated :==> Started");
		return new Gson().toJson(dataTableResults);
	}
	
	
}
